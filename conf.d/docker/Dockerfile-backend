# -------- 阶段1：构建 Conda 环境 --------
FROM dm8:latest as conda-builder

ENV TZ=Asia/Shanghai \
    CONDA_DIR=/opt/conda \
    PATH=/opt/conda/bin:$PATH \
    DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on

# 安装构建工具和 Miniconda
RUN yum makecache && \
    yum install -y curl bzip2 git gcc gcc-c++ make && \
    curl -fsSL https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh -o miniconda.sh && \
    bash miniconda.sh -b -p $CONDA_DIR && \
    rm miniconda.sh

# 初始化 Conda 并接受 ToS
RUN conda init && \
    conda config --set show_channel_urls yes && \
    conda config --set always_yes yes && \
    conda config --set report_errors false && \
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main && \
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r

# 创建环境并安装依赖
RUN conda create -n py312 python=3.12 -y && \
    conda run -n py312 conda install -y scikit-learn numpy pandas

# 拷贝项目 requirements
WORKDIR /tmp/build
COPY ./requirements.txt .
COPY ./requirements-kg.txt .

# 安装项目依赖
RUN conda run -n py312 pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple && \
    conda run -n py312 pip install -r requirements-kg.txt -i https://mirrors.aliyun.com/pypi/simple

# 离线模型
COPY ./conf.d/docker/zh_core_web_md_offlineall/ ./zh_core_web_md_offlineall/
RUN conda run -n py312 pip install --no-index --find-links=./zh_core_web_md_offlineall zh_core_web_md

# 清理缓存
RUN conda clean -afy


# -------- 阶段2：精简运行环境 --------
FROM dm8:latest

ENV TZ=Asia/Shanghai \
    CONDA_DIR=/opt/conda \
    PATH=/opt/conda/bin:$PATH \
    PYTHONUNBUFFERED=1

# 拷贝 Conda 环境
COPY --from=conda-builder $CONDA_DIR $CONDA_DIR

# 创建项目目录
WORKDIR /vue-fastapi-admin

# 拷贝项目运行所需文件
COPY ./conf.d/docker/zh_core_web_md_offlineall/ ./zh_core_web_md_offlineall/
COPY ./requirements.txt .
COPY ./requirements-kg.txt .

# 拷贝启动脚本
COPY ./conf.d/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

EXPOSE 9999
ENTRYPOINT ["/entrypoint.sh"]
